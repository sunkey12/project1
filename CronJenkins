 pipeline {
    agent any
   //    triggers {
   //         cron('*/5 * * * *')
   //     }
    stages {    
        stage('Dockerlogin') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    sh 'echo $DOCKERHUB_PASSWORD'
                    sh 'echo $DOCKERHUB_USERNAME' 
                }
            }
        }
        stage('Build_Number') {
            steps { 
                script {
                    def location = "/home/user/jenkins/jobs/dockerfile/builds/permalinks"
                    env.lastBuild = sh(script: "cat ${location} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
                    sh "echo ${env.lastBuild}"
                }
//             sh 'pwd' 
//            sh 'cd /home/user/jenkins/jobs/dockerfile/builds'
//             sh 'pwd'

           //  env.lastBuild = sh(script: "cat ${permalinksFile} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
           //  sh '(script: "cat permalinks  | grep lastSuccessfulBuild | awk '{print $2}'", returnstdout: true).trim()'
           //  sh(script: "cat ${permalinksFile} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
            }
        }
    }
          
}
        
